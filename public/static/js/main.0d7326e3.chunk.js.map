{"version":3,"sources":["helpers/fetch.js","types/types.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreeen.js","components/ui/Navbar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","helpers/claedar-messages-es.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","route/PrivateRoute.js","route/PublicRoute.js","route/Approuter.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","CalendarApp.js","index.js"],"names":["baseUrl","process","fetchWhitoutToken","enpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWhitToken","token","localStorage","getItem","types","prepareEvents","events","map","e","end","moment","toDate","start","eventAddNew","event","type","payload","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","initialState","useState","values","setValues","reset","handleInoutChange","target","name","value","LoginScreeen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","Navbar","useSelector","state","auth","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","later","clone","initEvent","notes","CalendarModal","modalOpen","ui","activeEvent","calendar","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","handleInputChange","closeModal","isOpen","onRequestClose","style","overlayClassName","closeTimeoutMS","momentStart","momentEnd","isSameOrAfter","trim","length","id","console","log","getState","res","_id","eventStartAddNew","minDate","autoComplete","rows","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","AddNewFab","DeleteEventFab","locale","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadious","opacity","display","color","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PrivateRoute","isAuthenticated","Component","component","rest","location","pathname","props","to","protoTypes","PropTypes","bool","isRequired","func","PublicRoute","isNotAuthenticated","Approuter","cheking","exact","path","rootReducer","combineReducers","action","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d7326e3.chunk.js","sourcesContent":["const baseUrl = process.env.REACT_APP_API_URL;\n\nexport const fetchWhitoutToken = (enpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${enpoint}`;\n\n    if (method === 'GET') {\n        return fetch(url)\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n\nexport const fetchWhitToken = (enpoint, data, method = 'GET') => {\n    const url = `${baseUrl}/${enpoint}`;\n    const token = localStorage.getItem('token') || '';\n\n    if (method === 'GET') {\n        return fetch(url, {\n            method,\n            headers: {\n                'x-token': token\n            }\n        })\n    } else {\n        return fetch(url, {\n            method,\n            headers: {\n                'Content-type': 'application/json',\n                'x-token': token\n            },\n            body: JSON.stringify(data)\n        })\n    }\n}\n","export const types = {\n    uiOpenModal: '[UI] Open modal',\n    uiCloseModal: '[UI] Close modal',\n\n    eventSetActive: '[Event] Set active',\n    eventLogout: '[Event] Logout event',\n    eventStartAddNew: '[Event] Add add new',\n    eventAddNew: '[Event] Add new',\n    eventClearActiveEvent: '[Event] Clear active event',\n    eventUpdated: '[Event] Event update',\n    eventDeleted: '[Event] Event deleted',\n    eventLoaded: '[Event] Event loaded',\n\n    authChecking: '[Checking] Checking login state',\n    authCheckingFinish: '[Checking] Finish checking login state',\n    authStartLogin: '[Checking] Start login',\n    authLogin: '[Checking] Login',\n    authStartRegister: '[Checking] Start register',\n    authStartTokenRenew: '[Checking] Start token renew',\n    authLogout: '[Checking] Logout'\n}","import moment from \"moment\"\n\nexport const prepareEvents = (events = []) => {\n    return events.map(\n        (e) => ({\n            ...e,\n            end: moment(e.end).toDate(),\n            start: moment(e.start).toDate(),\n        })\n    )\n}","import Swal from \"sweetalert2\";\nimport { fetchWhitToken } from \"../helpers/fetch\";\nimport { prepareEvents } from \"../helpers/prepareEvents\";\nimport { types } from \"../types/types\";\n\nexport const eventStartAddNew = (event) => {\n    return async(dispatch, getState) => {\n        const { uid, name } = getState().auth;\n\n        try {\n            const res = await fetchWhitToken('events', event, 'POST');\n            const body = await res.json();\n\n            if (body.ok) {\n                event.id = body.event.id;\n                event.user = {\n                    _id: uid,\n                    name\n                }\n                dispatch(eventAddNew(event))\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventAddNew = (event) => ({\n    type: types.eventAddNew,\n    payload: event\n})\n\nexport const eventSetActive = (event) => ({\n    type: types.eventSetActive,\n    payload: event\n})\n\nexport const eventClearActiveEvent = () => ({\n    type: types.eventClearActiveEvent\n})\n\nexport const eventStartUpdate = (event) => {\n    return async(dispatch) => {\n        try {\n            const resp = await fetchWhitToken(`events/${event.id}`, event, 'PUT');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventUpdated(event))\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventUpdated = (event) => ({\n    type: types.eventUpdated,\n    payload: event\n})\n\nexport const eventStartDelete = () => {\n    return async(dispatch, getState) => {\n        const { id } = getState().calendar.activeEvent;\n        try {\n            const resp = await fetchWhitToken(`events/${id}`, {}, 'DELETE');\n            const body = await resp.json();\n\n            if (body.ok) {\n                dispatch(eventDeleted())\n            } else {\n                Swal.fire('Error', body.msg, 'error')\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nexport const eventDeleted = () => ({\n    type: types.eventDeleted\n})\n\nexport const eventStartLoading = () => {\n    return async(dispatch) => {\n\n        try {\n            const resp = await fetchWhitToken('events');\n            const body = await resp.json();\n\n            const events = prepareEvents(body.events);\n\n            dispatch(eventLoaded(events));\n        } catch (error) {\n            console.log(error);\n        }\n    }\n}\n\nconst eventLoaded = (events) => ({\n    type: types.eventLoaded,\n    payload: events\n})\n\nexport const eventLogout = () => ({\n    type: types.eventLogout\n})","import Swal from \"sweetalert2\";\nimport { fetchWhitoutToken, fetchWhitToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nimport { eventLogout } from \"./events\";\n\nexport const starLogin = (email, password) => {\n    return async(dispatch) => {\n        const resp = await fetchWhitoutToken('auth', {email, password}, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n    }\n}\n\nexport const startRegister = (email, password, name) => {\n    return async(dispatch) => {\n        const resp = await fetchWhitoutToken('auth/new', {email, password, name}, 'POST');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            Swal.fire('Error', body.msg, 'error')\n        }\n    }\n}\n\nexport const startChecking = () => {\n    return async(dispatch) => {\n        const resp = await fetchWhitToken('auth/renew');\n        const body = await resp.json();\n\n        if (body.ok) {\n            localStorage.setItem('token', body.token);\n            localStorage.setItem('token-init-date', new Date().getTime());\n\n            dispatch(login({\n                uid: body.uid,\n                name: body.name\n            }))\n        } else {\n            // Swal.fire('Error', body.msg, 'error');\n            dispatch(checkingFinish());\n        }\n    }\n}\n\nconst checkingFinish = () => ({\n    type: types.authCheckingFinish\n})\n\nconst login = (user) => ({\n    type: types.authLogin,\n    payload: user\n})\n\nexport const startLogout = () => {\n    return (dispatch) => {\n        localStorage.clear();\n        dispatch(eventLogout())\n        dispatch(logout());\n    }\n}\n\nconst logout = () => ({\n    type: types.authLogout\n})","import { useState } from \"react\"\n\nexport const useForm = (initialState = {}) => {\n    const [values, setValues] = useState(initialState);\n\n    const reset = () => {\n        setValues(initialState)\n    }\n\n    const handleInoutChange = ({ target }) => {\n        setValues({\n            ...values,\n            [target.name]: target.value\n        })\n    }\n\n    return [values, handleInoutChange, reset]\n}","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport Swal from 'sweetalert2';\nimport { starLogin, startRegister } from '../../actions/auth';\nimport { useForm } from '../../hooks/useForm';\nimport './login.css';\n\nexport const LoginScreeen = () => {\n\n    const dispatch = useDispatch();\n\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\n        lEmail: 'abi@gmail.com',\n        lPassword: '123456'\n    });\n\n    const { lEmail, lPassword } = formLoginValues;\n\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\n        rName: 'Nadia',\n        rEmail: 'nadia@gmail.com',\n        rPassword1: '123456',\n        rPassword2: '123456'\n    });\n\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        dispatch(starLogin(lEmail, lPassword))\n    }\n\n    const handleRegister = (e) => {\n        e.preventDefault();\n\n        if (rPassword1 !== rPassword2) {\n            return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error')\n        }\n        // auth/new\n        dispatch(startRegister(rEmail, rPassword1, rName))\n    }\n\n    return (\n        <div className=\"container login-container\">\n            <div className=\"row\">\n                <div className=\"col-md-6 login-form-1\">\n                    <h3>Ingreso</h3>\n                    <form onSubmit={ handleLogin }>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"lEmail\"\n                                value={ lEmail }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\"\n                                name=\"lPassword\"\n                                value={ lPassword }\n                                onChange={ handleLoginInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\"\n                                className=\"btnSubmit\"\n                                value=\"Login\" \n                            />\n                        </div>\n                    </form>\n                </div>\n\n                <div className=\"col-md-6 login-form-2\">\n                    <h3>Registro</h3>\n                    <form onSubmit={ handleRegister }>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                placeholder=\"Nombre\"\n                                name=\"rName\"\n                                value={ rName }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"email\"\n                                className=\"form-control\"\n                                placeholder=\"Correo\"\n                                name=\"rEmail\"\n                                value={ rEmail }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Contraseña\" \n                                name=\"rPassword1\"\n                                value={ rPassword1 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Repita la contraseña\" \n                                name=\"rPassword2\"\n                                value={ rPassword2 }\n                                onChange={ handleRegisterInputChange }\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input \n                                type=\"submit\" \n                                className=\"btnSubmit\" \n                                value=\"Crear cuenta\" />\n                        </div>\n                    </form>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux';\nimport { useSelector } from 'react-redux'\nimport { startLogout } from '../../actions/auth';\n\nexport const Navbar = () => {\n    const dispatch = useDispatch();\n    const { name } = useSelector(state => state.auth);\n\n    const handleLogout = () => {\n        dispatch(startLogout());\n    }\n\n\n    return (\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\n            <span className=\"navbar-brand\">\n                { name }\n            </span>\n\n            <button className=\"btn btn-outline-danger\" onClick={ handleLogout }>\n                <i className=\"fas fa-sign-out-alt\"></i>\n                <span>  Salir</span>\n            </button>\n        </div>\n    )\n}\n","import React from 'react'\n\nexport const CalendarEvent = ({ event }) => {\n    const { title, user } = event\n    return (\n        <div>\n            <span>{ title }</span>\n            <strong> - { user.name }</strong>\n        </div>\n    )\n}\n","import { types } from \"../types/types\"\n\nexport const uiOpenModal = () => ({type: types.uiOpenModal});\n\nexport const uiCloseModal = () => ({type: types.uiCloseModal});","import React, { useEffect, useState } from 'react';\nimport Modal from 'react-modal';\nimport DateTimePicker from 'react-datetime-picker';\nimport moment from 'moment';\nimport Swal from 'sweetalert2';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiCloseModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nModal.setAppElement('#root');\nconst now = moment().minutes(0).seconds(0).add(1, 'hours')\nconst later = now.clone().add(1, 'hours');\n\nconst initEvent = {\n    title: '',\n    notes: '',\n    start: now.toDate(),\n    end: later.toDate()\n}\n\nexport const CalendarModal = () => {\n\n    const dispatch = useDispatch();\n    const { modalOpen } = useSelector(state => state.ui);\n    const { activeEvent } = useSelector(state => state.calendar);\n\n    const [dateStart, setDateStart] = useState(now.toDate());\n    const [dateEnd, setDateEnd] = useState(later.toDate());\n    const [titleValid, setTitleValid] = useState(true);\n    const [formValues, setFormValues] = useState(initEvent)\n\n    const { notes, title, start, end } = formValues;\n\n    useEffect(() => {\n        if (activeEvent) {\n            setFormValues(activeEvent)\n        } else {\n            setFormValues(initEvent)\n        }\n    }, [activeEvent, setFormValues])\n\n    const handleInputChange = ({ target }) => {\n        setFormValues({\n            ...formValues,\n            [target.name]: target.value\n        })\n    }\n\n    const closeModal = () => {\n        dispatch(uiCloseModal());\n        setFormValues(initEvent);\n        dispatch(eventClearActiveEvent());\n    }\n\n    const handleStartDateChage = (e) => {\n        // console.log(e);\n        setDateStart(e);\n        setFormValues({\n            ...formValues,\n            start: e\n        })\n    }\n\n    const handleEndDateChage = (e) => {\n        // console.log(e);\n        setDateEnd(e);\n        setFormValues({\n            ...formValues,\n            end: e\n        })\n    }\n\n    const handleSubmitForm = (e) => {\n        e.preventDefault();\n        // console.log(formValues);\n        const momentStart = moment(start);\n        const momentEnd = moment(end);\n\n        if (momentStart.isSameOrAfter(momentEnd)) {\n            // console.log('Fecha dos debe ser mayor');\n            return Swal.fire('Error', 'La fecha find debe ser mayor a la fecha inicio', 'error')\n        }\n        if (title.trim().length < 2) {\n            return setTitleValid(false)\n        }\n\n        if (activeEvent) {\n            dispatch(eventStartUpdate(formValues));\n        } else {\n            dispatch(eventStartAddNew(formValues));\n        }\n        setTitleValid(true);\n        closeModal();\n    }\n\n    return (\n        <Modal\n            isOpen={ modalOpen }\n            // onAfterOpen={afterOpenModal}\n            onRequestClose={ closeModal }\n            style={ customStyles }\n            overlayClassName=\"modal-fondo\"\n            closeTimeoutMS={ 200 }\n        >\n            <h3> { (activeEvent)? 'Editar evento': 'Nuevo evento' } </h3>\n            <hr />\n            <form className=\"container\" onSubmit={ handleSubmitForm }>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora inicio</label>\n                    <DateTimePicker\n                        onChange={ handleStartDateChage }\n                        value={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <div className=\"form-group\">\n                    <label>Fecha y hora fin</label>\n                    <DateTimePicker\n                        onChange={ handleEndDateChage }\n                        value={ dateEnd }\n                        minDate={ dateStart }\n                        className=\"form-control\"\n                    />\n                </div>\n\n                <hr />\n                <div className=\"form-group\">\n                    <label>Titulo y notas</label>\n                    <input \n                        type=\"text\" \n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\n                        placeholder=\"Título del evento\"\n                        name=\"title\"\n                        value={ title }\n                        onChange={ handleInputChange }\n                        autoComplete=\"off\"\n                    />\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\n                </div>\n\n                <div className=\"form-group\">\n                    <textarea \n                        type=\"text\" \n                        className=\"form-control\"\n                        placeholder=\"Notas\"\n                        rows=\"5\"\n                        name=\"notes\"\n                        value={ notes }\n                        onChange={ handleInputChange }\n                    ></textarea>\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\n                </div>\n\n                <button\n                    type=\"submit\"\n                    className=\"btn btn-outline-primary btn-block\"\n                >\n                    <i className=\"far fa-save\"></i>\n                    <span> Guardar</span>\n                </button>\n\n            </form>\n        </Modal>\n    )\n}\n","export const messages = {\n    allDay: 'Todo el día',\n    previous: '<',\n    next: '>',\n    today: 'Hoy',\n    month: 'Mes',\n    week: 'Semana',\n    day: 'Día',\n    agenda: 'Agenda',\n    date: 'Fecha',\n    time: 'Hora',\n    event: 'Evento',\n    noEventsInRange: 'No hay eventos en este rango',\n    showMore: total => `+ Ver más (${total})`\n};","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { uiOpenModal } from '../../actions/ui'\n\nexport const AddNewFab = () => {\n    const dispatch = useDispatch()\n\n    const handleClickNew = () => {\n        dispatch(uiOpenModal());\n    }\n\n    return (\n        <button className=\"btn btn-primary fab\" onClick={ handleClickNew }>\n            <i className=\"fas fa-plus\"></i>\n        </button>\n    )\n}\n","import React from 'react'\nimport { useDispatch } from 'react-redux'\nimport { eventStartDelete } from '../../actions/events'\n\nexport const DeleteEventFab = () => {\n\n    const dispatch = useDispatch()\n\n    const handelDelete = () => {\n        dispatch(eventStartDelete());\n    }\n    return (\n        <button className=\"btn btn-danger fab-danger\" onClick={ handelDelete }>\n            <i className=\"fas fa-trash\"></i>\n            <span> Borrar evento</span>\n        </button>\n    )\n}\n","import React, { useEffect, useState } from 'react'\nimport { Navbar } from '../ui/Navbar'\nimport { CalendarEvent } from './CalendarEvent';\nimport { CalendarModal } from './CalendarModal';\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\nimport moment from 'moment';\nimport { messages } from '../../helpers/claedar-messages-es';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { uiOpenModal } from '../../actions/ui';\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\nimport { AddNewFab } from '../ui/AddNewFab';\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\n\nmoment.locale('es')\nconst localizer = momentLocalizer(moment) // or globalizeLocalizer\n\nexport const CalendarScreen = () => {\n\n    const dispatch = useDispatch();\n    const { events, activeEvent } = useSelector(state => state.calendar);\n    const { uid } = useSelector(state => state.auth);\n\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\n\n    useEffect(() => {\n        dispatch(eventStartLoading())\n    }, [dispatch])\n\n    const onDoubleClick = (e) => {\n        dispatch(uiOpenModal())\n    }\n\n    const onSelectEvent = (e) => {\n        dispatch(eventSetActive(e));\n    }\n\n    const onViewChange = (e) => {\n        // console.log(e);\n        setLastView(e);\n        localStorage.setItem('lastView', e);\n    }\n     \n    const onSelectSlot = (e) => {\n        dispatch(eventClearActiveEvent());\n    }\n\n    const eventStyleGetter = (event, start, end, isSelected) => {\n        // console.log(event, start, end, isSelected);\n        const style = {\n            backgroundColor: (uid === event.user._id)?'#367CF7':'#465660',\n            borderRadious: '0px',\n            opacity: 0.8,\n            display: 'block',\n            color: 'white'\n        }\n        return {\n            style\n        }\n    }\n\n    return (\n        <div className=\"calendar-screen\">\n            <Navbar />\n\n            <Calendar\n                localizer={localizer}\n                events={events}\n                startAccessor=\"start\"\n                endAccessor=\"end\"\n                messages={ messages }\n                eventPropGetter={ eventStyleGetter }\n                onDoubleClickEvent={ onDoubleClick }\n                onSelectEvent={ onSelectEvent }\n                onView={ onViewChange }\n                onSelectSlot={ onSelectSlot }\n                selectable={ true }\n                view={ lastView }\n                components={{\n                    event: CalendarEvent\n                }}\n            />\n\n            <AddNewFab />\n\n            {\n                activeEvent && <DeleteEventFab />\n            }\n\n            <CalendarModal />\n        </div>\n    )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PrivateRoute = ({\n    isAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n\n    localStorage.setItem('lastLocation', rest.location.pathname)\n\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                (isAuthenticated) ?\n                    (<Component { ...props } />) :\n                    (<Redirect to='/login' />)\n            )}\n        />\n    )\n}\n\nPrivateRoute.protoTypes = {\n    isAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React from 'react'\nimport PropTypes from 'prop-types';\nimport { Redirect, Route } from 'react-router-dom'\n\nexport const PublicRoute = ({\n    isNotAuthenticated,\n    component: Component,\n    ...rest\n}) => {\n    return (\n        <Route { ...rest }\n            component={ (props) => (\n                (isNotAuthenticated) ?\n                    (<Redirect to='/' />) :\n                    (<Component { ...props } />) \n            )}\n        />\n    )\n}\n\nPublicRoute.protoTypes = {\n    isNotAuthenticated: PropTypes.bool.isRequired,\n    component: PropTypes.func.isRequired\n}","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\nimport { startChecking } from '../actions/auth';\nimport { LoginScreeen } from '../components/auth/LoginScreeen';\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\nimport { PrivateRoute } from './PrivateRoute';\nimport { PublicRoute } from './PublicRoute';\n\nexport const Approuter = () => {\n\n    const { cheking, uid } = useSelector(state => state.auth);\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(startChecking());\n    }, [dispatch])\n\n    if (cheking) {\n        return (<h5>Espere...</h5>)\n    }\n    return (\n        <Router>\n            <div>\n                <Switch>\n                    <PublicRoute \n                        exact \n                        path=\"/login\" \n                        component={ LoginScreeen } \n                        isNotAuthenticated={ !!uid }\n                    />\n                    <PrivateRoute \n                        exact \n                        path=\"/\" \n                        component={ CalendarScreen } \n                        isAuthenticated={ !!uid }\n                    />\n\n                    <Redirect to=\"/\" />\n                </Switch>\n            </div>\n        </Router>\n    )\n}\n","import { types } from \"../types/types\"\n\nconst initialState = {\n    cheking: true,\n    // uid: null,\n    // name: null\n}\n\nexport const authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.authLogin:\n            return {\n                ...state,\n                cheking: false,\n                ...action.payload\n            }\n\n        case types.authCheckingFinish:\n            return {\n                ...state,\n                cheking: false\n            }\n        \n        case types.authLogout:\n            return {\n                cheking: false\n            }\n    \n        default:\n            return state\n    }\n}","import { types } from \"../types/types\"\n\n// {\n//     id: new Date().getTime(),\n//     title: 'Spacieal day',\n//     start: moment().toDate(),\n//     end: moment().add(2, 'hours').toDate(),\n//     bgcolor: '#fafafa',\n//     notes: 'buy',\n//     user: {\n//         _id: '1234',\n//         name: 'Victor'\n//     }\n// }\n\nconst initialState = {\n    events: [],\n    activeEvent: null\n}\n\nexport const calendarReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.eventSetActive:\n            return {\n                ...state,\n                activeEvent: action.payload\n            }\n\n        case types.eventAddNew:\n            return {\n                ...state,\n                events: [...state.events, action.payload]\n            }\n\n        case types.eventClearActiveEvent:\n            return {\n                ...state,\n                activeEvent: null\n            }\n\n        case types.eventUpdated:\n            return {\n                ...state,\n                events: state.events.map(\n                    e => (e.id === action.payload.id) ? action.payload: e\n                )\n            }\n\n        case types.eventDeleted:\n            return {\n                ...state,\n                events: state.events.filter(\n                    e => (e.id !== state.activeEvent.id)\n                ),\n                activeEvent: null\n            }\n\n        case types.eventLoaded:\n            return {\n                ...state,\n                events: [...action.payload]\n            }\n\n        case types.eventLogout: \n            return {\n                ...initialState\n            }\n        \n        default:\n            return state\n    }\n}","import { types } from \"../types/types\";\n\nconst initialState = {\n    modalOpen: false\n}\n\nexport const uiReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case types.uiOpenModal:\n            return {\n                ...state,\n                modalOpen: true\n            }\n\n        case types.uiCloseModal:\n            return {\n                ...state,\n                modalOpen: false\n            }\n    \n        default:\n            return initialState\n    }\n}","import { combineReducers } from \"redux\";\nimport { authReducer } from \"./authReducer\";\nimport { calendarReducer } from \"./calendarReducer\";\nimport { uiReducer } from \"./uiReducer\";\n\nexport const rootReducer = combineReducers({\n    ui: uiReducer,\n    calendar: calendarReducer,\n    auth: authReducer\n})","import { applyMiddleware, compose, createStore } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { rootReducer } from \"../reducers/rootReducer\";\n\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\n\n\nexport const store = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(thunk))\n)","import React from 'react';\nimport { Approuter } from './route/Approuter';\nimport 'moment/locale/es-mx'\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\nimport { Provider } from 'react-redux';\nimport { store } from './store/store';\n\nexport const CalendarApp = () => {\n\n    return (\n        <Provider store={ store }>\n            <Approuter />\n        </Provider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\nimport './styles.css'\n\nReactDOM.render(\n  <CalendarApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}